{"ast":null,"code":"var _jsxFileName = \"/Users/shrutiravichandran/Desktop/NaRDil Project Managment tool/src/components/AllocationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './AllocationModal.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllocationModal = ({\n  task,\n  person,\n  onClose,\n  onUpdate\n}) => {\n  _s();\n  // Convert date strings to Date objects if they exist\n  const processedTask = {\n    ...task,\n    startDate: task.startDate ? new Date(task.startDate) : null,\n    endDate: task.endDate ? new Date(task.endDate) : null\n  };\n  const [hours, setHours] = useState(task.hours.replace('h', ''));\n  const [status, setStatus] = useState(task.status);\n  const [notes, setNotes] = useState(task.notes);\n  const [project, setProject] = useState(task.project || '');\n  const [projectColor, setProjectColor] = useState(task.color || '');\n  const [taskTitle, setTaskTitle] = useState(task.title || '');\n  const [currentTask, setCurrentTask] = useState(processedTask);\n  const [showActionsDropdown, setShowActionsDropdown] = useState(false);\n  const [showProjectDropdown, setShowProjectDropdown] = useState(false);\n  const [showRepeatDropdown, setShowRepeatDropdown] = useState(false);\n  const [repeatOption, setRepeatOption] = useState(task.repeat || 'Doesn\\'t repeat');\n  const isNewTask = !task.id || task.id === Date.now();\n  const projectOptions = [{\n    id: 1,\n    name: 'Test 1',\n    color: '#00BCD4'\n  },\n  // Cyan blue\n  {\n    id: 2,\n    name: 'Test 2',\n    color: '#FFB6C1'\n  } // Light pink\n  ];\n  const repeatOptions = ['Doesn\\'t repeat', 'Repeats daily', 'Repeats weekly'];\n  const handleDateClick = pickerId => {\n    const picker = document.getElementById(pickerId);\n    if (picker) {\n      picker.showPicker();\n    }\n  };\n  const calculateDuration = (startDate, endDate) => {\n    if (!startDate || !endDate) return 1;\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n\n    // Calculate the difference in days\n    const timeDiff = end.getTime() - start.getTime();\n    const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));\n\n    // Return at least 1 day, or the calculated difference\n    return Math.max(1, daysDiff);\n  };\n  const handleDateChange = (field, value) => {\n    const newTask = {\n      ...currentTask\n    };\n    if (field === 'startDate') {\n      newTask.startDate = new Date(value);\n    } else if (field === 'endDate') {\n      newTask.endDate = new Date(value);\n    }\n\n    // Calculate and update duration based on date changes\n    if (newTask.startDate && newTask.endDate) {\n      newTask.duration = calculateDuration(newTask.startDate, newTask.endDate);\n    }\n    setCurrentTask(newTask);\n  };\n  const handleUpdate = () => {\n    // Create the updated task data\n    const updatedTask = {\n      ...currentTask,\n      hours: `${hours}h`,\n      status,\n      notes,\n      project,\n      title: taskTitle,\n      personId: person.id,\n      color: projectColor || person.color,\n      // Use project color if available, otherwise person color\n      repeat: repeatOption\n    };\n\n    // Call the parent's update function\n    if (onUpdate) {\n      onUpdate(updatedTask);\n    }\n    console.log('Creating allocation:', updatedTask);\n    onClose();\n  };\n  const handleDelete = () => {\n    if (onUpdate) {\n      onUpdate({\n        ...currentTask,\n        _delete: true\n      });\n    }\n    onClose();\n  };\n  const handleCancel = () => {\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tab-btn active\",\n          children: \"Allocation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tab-btn\",\n          children: \"Time off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tab-btn\",\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hours-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hours-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hours-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: hours,\n                  onChange: e => setHours(e.target.value),\n                  className: \"hours-input-field\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"hours-unit\",\n                  children: \"h/day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-hours\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Total hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: hours,\n                onChange: e => setHours(e.target.value),\n                className: \"total-hours-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"duration-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"duration-input-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: currentTask.duration,\n                  onChange: e => setCurrentTask({\n                    ...currentTask,\n                    duration: e.target.value\n                  }),\n                  className: \"duration-input\",\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"duration-unit\",\n                  children: \"working day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-range\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: currentTask.startDate && currentTask.startDate instanceof Date ? currentTask.startDate.toDateString() : '',\n                  onChange: e => setCurrentTask({\n                    ...currentTask,\n                    startDate: new Date(e.target.value)\n                  }),\n                  className: \"date-input\",\n                  placeholder: \"Select date\",\n                  readOnly: true,\n                  onClick: () => handleDateClick('start-date-picker')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: currentTask.startDate && currentTask.startDate instanceof Date ? currentTask.startDate.toISOString().split('T')[0] : '',\n                  onChange: e => handleDateChange('startDate', e.target.value),\n                  className: \"date-picker-hidden\",\n                  id: \"start-date-picker\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date-arrow\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: currentTask.endDate && currentTask.endDate instanceof Date ? currentTask.endDate.toDateString() : '',\n                  onChange: e => setCurrentTask({\n                    ...currentTask,\n                    endDate: new Date(e.target.value)\n                  }),\n                  className: \"date-input\",\n                  placeholder: \"Select date\",\n                  readOnly: true,\n                  onClick: () => handleDateClick('end-date-picker')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: currentTask.endDate && currentTask.endDate instanceof Date ? currentTask.endDate.toISOString().split('T')[0] : '',\n                  onChange: e => handleDateChange('endDate', e.target.value),\n                  className: \"date-picker-hidden\",\n                  id: \"end-date-picker\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"repeat-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: repeatOption,\n              onChange: e => {},\n              className: \"repeat-input\",\n              readOnly: true,\n              onClick: () => setShowRepeatDropdown(!showRepeatDropdown)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dropdown-arrow\",\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), showRepeatDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"repeat-dropdown-menu\",\n              children: repeatOptions.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"repeat-option\",\n                onClick: () => {\n                  setRepeatOption(option);\n                  setShowRepeatDropdown(false);\n                },\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: project,\n              onChange: e => setProject(e.target.value),\n              placeholder: \"Select project\",\n              className: \"project-input-field\",\n              readOnly: true,\n              onClick: () => setShowProjectDropdown(!showProjectDropdown)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dropdown-arrow\",\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), showProjectDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-dropdown\",\n              children: projectOptions.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"project-option\",\n                onClick: () => {\n                  setProject(option.name);\n                  setProjectColor(option.color);\n                  setShowProjectDropdown(false);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"project-color-indicator\",\n                  style: {\n                    backgroundColor: option.color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this), option.name]\n              }, option.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-input\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: taskTitle,\n              onChange: e => setTaskTitle(e.target.value),\n              placeholder: \"Enter task name\",\n              className: \"task-input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: notes,\n            onChange: e => setNotes(e.target.value),\n            placeholder: \"Add details specific to this allocation\",\n            className: \"notes-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Assigned to\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assigned-tag\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"assigned-name\",\n              children: person.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-btn\",\n              onClick: () => {},\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: isNewTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-btn\",\n              onClick: handleUpdate,\n              children: \"Create allocation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"update-btn\",\n              onClick: handleUpdate,\n              children: \"Update allocation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions-dropdown-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"actions-btn\",\n                onClick: () => setShowActionsDropdown(!showActionsDropdown),\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), showActionsDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"actions-dropdown\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-btn\",\n                  onClick: handleDelete,\n                  children: \"Delete allocation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(AllocationModal, \"UYjLjQJBw+41IhENFEaiCDp4KCg=\");\n_c = AllocationModal;\nexport default AllocationModal;\nvar _c;\n$RefreshReg$(_c, \"AllocationModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AllocationModal","task","person","onClose","onUpdate","_s","processedTask","startDate","Date","endDate","hours","setHours","replace","status","setStatus","notes","setNotes","project","setProject","projectColor","setProjectColor","color","taskTitle","setTaskTitle","title","currentTask","setCurrentTask","showActionsDropdown","setShowActionsDropdown","showProjectDropdown","setShowProjectDropdown","showRepeatDropdown","setShowRepeatDropdown","repeatOption","setRepeatOption","repeat","isNewTask","id","now","projectOptions","name","repeatOptions","handleDateClick","pickerId","picker","document","getElementById","showPicker","calculateDuration","start","end","timeDiff","getTime","daysDiff","Math","ceil","max","handleDateChange","field","value","newTask","duration","handleUpdate","updatedTask","personId","console","log","handleDelete","_delete","handleCancel","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","readOnly","toDateString","placeholder","toISOString","split","map","option","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/shrutiravichandran/Desktop/NaRDil Project Managment tool/src/components/AllocationModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './AllocationModal.css';\n\nconst AllocationModal = ({ task, person, onClose, onUpdate }) => {\n  // Convert date strings to Date objects if they exist\n  const processedTask = {\n    ...task,\n    startDate: task.startDate ? new Date(task.startDate) : null,\n    endDate: task.endDate ? new Date(task.endDate) : null\n  };\n\n  const [hours, setHours] = useState(task.hours.replace('h', ''));\n  const [status, setStatus] = useState(task.status);\n  const [notes, setNotes] = useState(task.notes);\n  const [project, setProject] = useState(task.project || '');\n  const [projectColor, setProjectColor] = useState(task.color || '');\n  const [taskTitle, setTaskTitle] = useState(task.title || '');\n  const [currentTask, setCurrentTask] = useState(processedTask);\n  const [showActionsDropdown, setShowActionsDropdown] = useState(false);\n  const [showProjectDropdown, setShowProjectDropdown] = useState(false);\n  const [showRepeatDropdown, setShowRepeatDropdown] = useState(false);\n  const [repeatOption, setRepeatOption] = useState(task.repeat || 'Doesn\\'t repeat');\n  \n  const isNewTask = !task.id || task.id === Date.now();\n\n  const projectOptions = [\n    { id: 1, name: 'Test 1', color: '#00BCD4' }, // Cyan blue\n    { id: 2, name: 'Test 2', color: '#FFB6C1' }  // Light pink\n  ];\n\n  const repeatOptions = [\n    'Doesn\\'t repeat',\n    'Repeats daily',\n    'Repeats weekly'\n  ];\n\n  const handleDateClick = (pickerId) => {\n    const picker = document.getElementById(pickerId);\n    if (picker) {\n      picker.showPicker();\n    }\n  };\n\n  const calculateDuration = (startDate, endDate) => {\n    if (!startDate || !endDate) return 1;\n    \n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    \n    // Calculate the difference in days\n    const timeDiff = end.getTime() - start.getTime();\n    const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));\n    \n    // Return at least 1 day, or the calculated difference\n    return Math.max(1, daysDiff);\n  };\n\n  const handleDateChange = (field, value) => {\n    const newTask = { ...currentTask };\n    \n    if (field === 'startDate') {\n      newTask.startDate = new Date(value);\n    } else if (field === 'endDate') {\n      newTask.endDate = new Date(value);\n    }\n    \n    // Calculate and update duration based on date changes\n    if (newTask.startDate && newTask.endDate) {\n      newTask.duration = calculateDuration(newTask.startDate, newTask.endDate);\n    }\n    \n    setCurrentTask(newTask);\n  };\n\n  const handleUpdate = () => {\n    // Create the updated task data\n    const updatedTask = {\n      ...currentTask,\n      hours: `${hours}h`,\n      status,\n      notes,\n      project,\n      title: taskTitle,\n      personId: person.id,\n      color: projectColor || person.color, // Use project color if available, otherwise person color\n      repeat: repeatOption\n    };\n    \n    // Call the parent's update function\n    if (onUpdate) {\n      onUpdate(updatedTask);\n    }\n    \n    console.log('Creating allocation:', updatedTask);\n    onClose();\n  };\n\n  const handleDelete = () => {\n    if (onUpdate) {\n      onUpdate({ ...currentTask, _delete: true });\n    }\n    onClose();\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        {/* Tabs */}\n        <div className=\"modal-tabs\">\n          <button className=\"tab-btn active\">Allocation</button>\n          <button className=\"tab-btn\">Time off</button>\n          <button className=\"tab-btn\">Status</button>\n        </div>\n\n        <div className=\"modal-body\">\n          {/* Hours Section */}\n          <div className=\"form-section\">\n            <div className=\"hours-row\">\n              <div className=\"hours-input-group\">\n                <label>Hours</label>\n                <div className=\"hours-input\">\n                  <input \n                    type=\"text\" \n                    value={hours} \n                    onChange={(e) => setHours(e.target.value)}\n                    className=\"hours-input-field\"\n                  />\n                  <span className=\"hours-unit\">h/day</span>\n                </div>\n              </div>\n              <div className=\"total-hours\">\n                <label>Total hours</label>\n                <input \n                  type=\"text\" \n                  value={hours} \n                  onChange={(e) => setHours(e.target.value)}\n                  className=\"total-hours-input\"\n                />\n              </div>\n            </div>\n\n            <div className=\"duration-row\">\n              <div className=\"duration-input-group\">\n                <label>Duration</label>\n                <div className=\"duration-input-container\">\n                  <input \n                    type=\"text\" \n                    value={currentTask.duration} \n                    onChange={(e) => setCurrentTask({...currentTask, duration: e.target.value})}\n                    className=\"duration-input\"\n                    readOnly\n                  />\n                  <span className=\"duration-unit\">working day</span>\n                </div>\n              </div>\n              <div className=\"date-range\">\n                <div className=\"date-input-container\">\n                  <input \n                    type=\"text\" \n                    value={currentTask.startDate && currentTask.startDate instanceof Date ? currentTask.startDate.toDateString() : ''} \n                    onChange={(e) => setCurrentTask({...currentTask, startDate: new Date(e.target.value)})}\n                    className=\"date-input\"\n                    placeholder=\"Select date\"\n                    readOnly\n                    onClick={() => handleDateClick('start-date-picker')}\n                  />\n                                  <input \n                  type=\"date\" \n                  value={currentTask.startDate && currentTask.startDate instanceof Date ? currentTask.startDate.toISOString().split('T')[0] : ''} \n                  onChange={(e) => handleDateChange('startDate', e.target.value)}\n                  className=\"date-picker-hidden\"\n                  id=\"start-date-picker\"\n                />\n                </div>\n                <span className=\"date-arrow\">→</span>\n                <div className=\"date-input-container\">\n                  <input \n                    type=\"text\" \n                    value={currentTask.endDate && currentTask.endDate instanceof Date ? currentTask.endDate.toDateString() : ''} \n                    onChange={(e) => setCurrentTask({...currentTask, endDate: new Date(e.target.value)})}\n                    className=\"date-input\"\n                    placeholder=\"Select date\"\n                    readOnly\n                    onClick={() => handleDateClick('end-date-picker')}\n                  />\n                                  <input \n                  type=\"date\" \n                  value={currentTask.endDate && currentTask.endDate instanceof Date ? currentTask.endDate.toISOString().split('T')[0] : ''} \n                  onChange={(e) => handleDateChange('endDate', e.target.value)}\n                  className=\"date-picker-hidden\"\n                  id=\"end-date-picker\"\n                />\n                </div>\n              </div>\n            </div>\n            <div className=\"repeat-dropdown\">\n              <input \n                type=\"text\" \n                value={repeatOption} \n                onChange={(e) => {}}\n                className=\"repeat-input\"\n                readOnly\n                onClick={() => setShowRepeatDropdown(!showRepeatDropdown)}\n              />\n              <span className=\"dropdown-arrow\">▼</span>\n              {showRepeatDropdown && (\n                <div className=\"repeat-dropdown-menu\">\n                  {repeatOptions.map(option => (\n                    <button\n                      key={option}\n                      className=\"repeat-option\"\n                      onClick={() => {\n                        setRepeatOption(option);\n                        setShowRepeatDropdown(false);\n                      }}\n                    >\n                      {option}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Project Section */}\n          <div className=\"form-section\">\n            <label>Project</label>\n            <div className=\"project-input\">\n              <input \n                type=\"text\"\n                value={project}\n                onChange={(e) => setProject(e.target.value)}\n                placeholder=\"Select project\"\n                className=\"project-input-field\"\n                readOnly\n                onClick={() => setShowProjectDropdown(!showProjectDropdown)}\n              />\n              <span className=\"dropdown-arrow\">▼</span>\n              {showProjectDropdown && (\n                <div className=\"project-dropdown\">\n                  {projectOptions.map(option => (\n                    <button\n                      key={option.id}\n                      className=\"project-option\"\n                      onClick={() => {\n                        setProject(option.name);\n                        setProjectColor(option.color);\n                        setShowProjectDropdown(false);\n                      }}\n                    >\n                      <div \n                        className=\"project-color-indicator\" \n                        style={{ backgroundColor: option.color }}\n                      ></div>\n                      {option.name}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Task Section */}\n          <div className=\"form-section\">\n            <label>Task</label>\n            <div className=\"task-input\">\n              <input \n                type=\"text\"\n                value={taskTitle}\n                onChange={(e) => setTaskTitle(e.target.value)}\n                placeholder=\"Enter task name\"\n                className=\"task-input-field\"\n              />\n            </div>\n          </div>\n\n          {/* Notes Section */}\n          <div className=\"form-section\">\n            <label>Notes</label>\n            <textarea \n              value={notes}\n              onChange={(e) => setNotes(e.target.value)}\n              placeholder=\"Add details specific to this allocation\"\n              className=\"notes-textarea\"\n            />\n          </div>\n\n          {/* Assigned to Section */}\n          <div className=\"form-section\">\n            <label>Assigned to</label>\n            <div className=\"assigned-tag\">\n              <span className=\"assigned-name\">{person.name}</span>\n              <button className=\"remove-btn\" onClick={() => {}}>×</button>\n            </div>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"modal-footer\">\n          <div className=\"action-buttons\">\n            {isNewTask ? (\n              <>\n                <button className=\"create-btn\" onClick={handleUpdate}>\n                  Create allocation\n                </button>\n                <button className=\"cancel-btn\" onClick={handleCancel}>\n                  Cancel\n                </button>\n              </>\n            ) : (\n              <>\n                <button className=\"update-btn\" onClick={handleUpdate}>\n                  Update allocation\n                </button>\n                <button className=\"cancel-btn\" onClick={handleCancel}>\n                  Cancel\n                </button>\n                <div className=\"actions-dropdown-container\">\n                  <button \n                    className=\"actions-btn\" \n                    onClick={() => setShowActionsDropdown(!showActionsDropdown)}\n                  >\n                    Actions\n                  </button>\n                  {showActionsDropdown && (\n                    <div className=\"actions-dropdown\">\n                      <button className=\"delete-btn\" onClick={handleDelete}>\n                        Delete allocation\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AllocationModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}