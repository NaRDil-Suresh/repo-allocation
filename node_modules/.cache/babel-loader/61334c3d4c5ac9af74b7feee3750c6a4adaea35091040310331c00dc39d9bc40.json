{"ast":null,"code":"var _jsxFileName = \"/Users/shrutiravichandran/Desktop/NaRDil Project Managment tool/src/components/Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Schedule.css';\nimport AllocationModal from './AllocationModal';\nimport PersonModal from './PersonModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedule = () => {\n  _s();\n  const [selectedTeam, setSelectedTeam] = useState('This week');\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showPersonModal, setShowPersonModal] = useState(false);\n\n  // Generate weeks of data (past and future)\n  const generateWeeks = (startDate, numWeeks) => {\n    const weeks = [];\n    const currentDate = new Date(startDate);\n    for (let i = 0; i < numWeeks; i++) {\n      const week = [];\n      const weekStart = new Date(currentDate);\n      weekStart.setDate(currentDate.getDate() - (currentDate.getDay() - 1)); // Start from Monday\n\n      for (let j = 0; j < 7; j++) {\n        const day = new Date(weekStart);\n        day.setDate(weekStart.getDate() + j);\n        week.push(day);\n      }\n      weeks.push(week);\n      currentDate.setDate(currentDate.getDate() + 7);\n    }\n    return weeks;\n  };\n\n  // Generate 52 weeks (1 year) of data\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - 26 * 7); // Start 26 weeks ago\n  const allWeeks = generateWeeks(startDate, 52);\n  const [currentWeekIndex, setCurrentWeekIndex] = useState(26); // Start at current week\n\n  // Sample data matching the Float interface\n  const teamMembers = [{\n    id: 1,\n    initials: 'RR',\n    name: 'Recekesavan R',\n    role: 'Team Lead',\n    hours: '32h',\n    color: '#4CAF50'\n  }, {\n    id: 2,\n    initials: 'S',\n    name: 'Sastha',\n    role: 'Recekesavan Team',\n    hours: '16.5h',\n    color: '#FF9800'\n  }, {\n    id: 3,\n    initials: 'J',\n    name: 'Jakhir',\n    role: 'Team Lead',\n    hours: '16h',\n    color: '#2196F3'\n  }, {\n    id: 4,\n    initials: 'I',\n    name: 'Ibrahim',\n    role: 'Recekesavan Team',\n    hours: '16h',\n    color: '#9C27B0'\n  }, {\n    id: 5,\n    initials: 'RK',\n    name: 'Ram kumar',\n    role: 'Team Lead',\n    hours: '40h',\n    color: '#F44336'\n  }];\n\n  // Load tasks from localStorage or use default data\n  const loadTasksFromStorage = () => {\n    const savedTasks = localStorage.getItem('schedule-tasks');\n    if (savedTasks) {\n      return JSON.parse(savedTasks);\n    }\n    // Return default tasks if no saved data\n    return [{\n      id: 1,\n      personId: 1,\n      weekIndex: 26,\n      dayIndex: 2,\n      // Wednesday\n      title: 'Submittal d Auburn Vist',\n      hours: '4h',\n      color: '#F44336',\n      project: 'Artcad Builders / Auburn Vista Apartments',\n      status: 'tentative',\n      notes: 'Submittal documentation for Auburn Vista project',\n      startDate: '30 Jul 2025',\n      endDate: '30 Jul 2025',\n      duration: '1 working day'\n    }, {\n      id: 2,\n      personId: 1,\n      weekIndex: 26,\n      dayIndex: 2,\n      title: 'No Task Dakota Affo',\n      hours: '4h',\n      color: '#4CAF50',\n      project: 'Dakota Affo Project',\n      status: 'completed',\n      notes: 'General project work',\n      startDate: '30 Jul 2025',\n      endDate: '30 Jul 2025',\n      duration: '1 working day'\n    }, {\n      id: 3,\n      personId: 2,\n      weekIndex: 26,\n      dayIndex: 0,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '7.5h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '28 Jul 2025',\n      endDate: '28 Jul 2025',\n      duration: '1 working day'\n    }, {\n      id: 4,\n      personId: 2,\n      weekIndex: 26,\n      dayIndex: 1,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '29 Jul 2025',\n      endDate: '29 Jul 2025',\n      duration: '1 working day'\n    }, {\n      id: 5,\n      personId: 2,\n      weekIndex: 26,\n      dayIndex: 2,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '30 Jul 2025',\n      endDate: '30 Jul 2025',\n      duration: '1 working day'\n    }, {\n      id: 6,\n      personId: 3,\n      weekIndex: 26,\n      dayIndex: 3,\n      title: 'No Task Sand Canyon Plaza EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'General project work for Sand Canyon',\n      startDate: '31 Jul 2025',\n      endDate: '31 Jul 2025',\n      duration: '1 working day'\n    }, {\n      id: 7,\n      personId: 3,\n      weekIndex: 26,\n      dayIndex: 4,\n      title: 'No Task Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'General project work for Sand Canyon',\n      startDate: '1 Aug 2025',\n      endDate: '1 Aug 2025',\n      duration: '1 working day'\n    }, {\n      id: 8,\n      personId: 4,\n      weekIndex: 26,\n      dayIndex: 0,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '28 Jul 2025',\n      endDate: '28 Jul 2025',\n      duration: '1 working day'\n    }, {\n      id: 9,\n      personId: 4,\n      weekIndex: 26,\n      dayIndex: 1,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '29 Jul 2025',\n      endDate: '29 Jul 2025',\n      duration: '1 working day'\n    }, {\n      id: 10,\n      personId: 4,\n      weekIndex: 26,\n      dayIndex: 2,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '30 Jul 2025',\n      endDate: '30 Jul 2025',\n      duration: '1 working day'\n    }];\n  };\n  const [tasks, setTasks] = useState(loadTasksFromStorage());\n  const getTasksForPersonAndDay = (personId, weekIndex, dayIndex) => {\n    return tasks.filter(task => task.personId === personId && task.weekIndex === weekIndex && task.dayIndex === dayIndex);\n  };\n  const formatDay = date => {\n    const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    const dayName = days[date.getDay() === 0 ? 6 : date.getDay() - 1];\n    const dayNumber = date.getDate();\n    return `${dayName} ${dayNumber}`;\n  };\n  const formatMonthRange = () => {\n    const currentWeek = allWeeks[currentWeekIndex];\n    const firstDay = currentWeek[0];\n    const lastDay = currentWeek[6];\n    const firstMonth = firstDay.toLocaleDateString('en-US', {\n      month: 'short'\n    });\n    const lastMonth = lastDay.toLocaleDateString('en-US', {\n      month: 'short'\n    });\n    if (firstMonth === lastMonth) {\n      return firstMonth;\n    }\n    return `${firstMonth} - ${lastMonth}`;\n  };\n  const getCurrentDay = () => {\n    const today = new Date();\n    const currentWeek = allWeeks[currentWeekIndex];\n    const todayIndex = currentWeek.findIndex(day => day.toDateString() === today.toDateString());\n    if (todayIndex !== -1) {\n      return formatDay(currentWeek[todayIndex]);\n    }\n    return null;\n  };\n  const navigateWeek = direction => {\n    const newIndex = currentWeekIndex + direction;\n    if (newIndex >= 0 && newIndex < allWeeks.length) {\n      setCurrentWeekIndex(newIndex);\n    }\n  };\n  const goToToday = () => {\n    setCurrentWeekIndex(26); // Current week index\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setShowModal(true);\n  };\n  const handleEmptyCellClick = (personId, weekIndex, dayIndex, day) => {\n    const newTask = {\n      id: Date.now(),\n      // Generate unique ID\n      personId: personId,\n      weekIndex: weekIndex,\n      dayIndex: dayIndex,\n      title: '',\n      hours: '8h',\n      color: '#FF6B6B',\n      project: '',\n      status: 'pending',\n      notes: '',\n      startDate: day,\n      endDate: day,\n      duration: 1\n    };\n    setSelectedTask(newTask);\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedTask(null);\n  };\n  const handleTaskUpdate = updatedTask => {\n    setTasks(prevTasks => {\n      let newTasks;\n\n      // Handle delete\n      if (updatedTask._delete) {\n        newTasks = prevTasks.filter(task => task.id !== updatedTask.id);\n      }\n      // If it's a new task (no existing id), add it\n      else if (!updatedTask.id || !prevTasks.find(t => t.id === updatedTask.id)) {\n        newTasks = [...prevTasks, updatedTask];\n      }\n      // Otherwise update existing task\n      else {\n        newTasks = prevTasks.map(task => task.id === updatedTask.id ? updatedTask : task);\n      }\n\n      // Save to localStorage\n      localStorage.setItem('schedule-tasks', JSON.stringify(newTasks));\n      return newTasks;\n    });\n  };\n  const currentWeek = allWeeks[currentWeekIndex];\n  const currentDay = getCurrentDay();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-person-btn\",\n          onClick: () => setShowPersonModal(true),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"person-icon\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"plus-icon\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn-text\",\n            children: \"Add person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: formatMonthRange()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), currentDay && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"current-day\",\n          children: currentDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nav-btn\",\n          onClick: () => navigateWeek(-1),\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nav-btn\",\n          onClick: () => navigateWeek(1),\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"today-btn\",\n          onClick: goToToday,\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"days-header\",\n        children: currentWeek.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-header\",\n          children: formatDay(day)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), teamMembers.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person-row\",\n        children: currentWeek.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-cell\",\n          onClick: () => handleEmptyCellClick(person.id, currentWeekIndex, dayIndex, day),\n          children: getTasksForPersonAndDay(person.id, currentWeekIndex, dayIndex).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-block\",\n            style: {\n              backgroundColor: task.color\n            },\n            onClick: e => {\n              e.stopPropagation();\n              handleTaskClick(task);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-title\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-hours\",\n              children: task.hours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 21\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 19\n          }, this))\n        }, dayIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }, this))\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-info\",\n      children: [\"Week \", currentWeekIndex + 1, \" of \", allWeeks.length, \"(\", currentWeekIndex - 26 > 0 ? `+${currentWeekIndex - 26} weeks ahead` : currentWeekIndex - 26 < 0 ? `${Math.abs(currentWeekIndex - 26)} weeks ago` : 'Current week', \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), showModal && selectedTask && /*#__PURE__*/_jsxDEV(AllocationModal, {\n      task: selectedTask,\n      person: teamMembers.find(p => p.id === selectedTask.personId),\n      onClose: closeModal,\n      onUpdate: handleTaskUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedule, \"BccbrqmdSfREAnaEK7MwtTQz8xc=\");\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","AllocationModal","PersonModal","jsxDEV","_jsxDEV","Schedule","_s","selectedTeam","setSelectedTeam","selectedTask","setSelectedTask","showModal","setShowModal","showPersonModal","setShowPersonModal","generateWeeks","startDate","numWeeks","weeks","currentDate","Date","i","week","weekStart","setDate","getDate","getDay","j","day","push","allWeeks","currentWeekIndex","setCurrentWeekIndex","teamMembers","id","initials","name","role","hours","color","loadTasksFromStorage","savedTasks","localStorage","getItem","JSON","parse","personId","weekIndex","dayIndex","title","project","status","notes","endDate","duration","tasks","setTasks","getTasksForPersonAndDay","filter","task","formatDay","date","days","dayName","dayNumber","formatMonthRange","currentWeek","firstDay","lastDay","firstMonth","toLocaleDateString","month","lastMonth","getCurrentDay","today","todayIndex","findIndex","toDateString","navigateWeek","direction","newIndex","length","goToToday","handleTaskClick","handleEmptyCellClick","newTask","now","closeModal","handleTaskUpdate","updatedTask","prevTasks","newTasks","_delete","find","t","map","setItem","stringify","currentDay","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","index","person","style","backgroundColor","e","stopPropagation","Math","abs","p","onClose","onUpdate","_c","$RefreshReg$"],"sources":["/Users/shrutiravichandran/Desktop/NaRDil Project Managment tool/src/components/Schedule.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Schedule.css';\nimport AllocationModal from './AllocationModal';\nimport PersonModal from './PersonModal';\n\nconst Schedule = () => {\n  const [selectedTeam, setSelectedTeam] = useState('This week');\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showPersonModal, setShowPersonModal] = useState(false);\n\n\n  // Generate weeks of data (past and future)\n  const generateWeeks = (startDate, numWeeks) => {\n    const weeks = [];\n    const currentDate = new Date(startDate);\n    \n    for (let i = 0; i < numWeeks; i++) {\n      const week = [];\n      const weekStart = new Date(currentDate);\n      weekStart.setDate(currentDate.getDate() - (currentDate.getDay() - 1)); // Start from Monday\n      \n      for (let j = 0; j < 7; j++) {\n        const day = new Date(weekStart);\n        day.setDate(weekStart.getDate() + j);\n        week.push(day);\n      }\n      weeks.push(week);\n      currentDate.setDate(currentDate.getDate() + 7);\n    }\n    \n    return weeks;\n  };\n\n  // Generate 52 weeks (1 year) of data\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - 26 * 7); // Start 26 weeks ago\n  const allWeeks = generateWeeks(startDate, 52);\n  const [currentWeekIndex, setCurrentWeekIndex] = useState(26); // Start at current week\n\n  // Sample data matching the Float interface\n  const teamMembers = [\n    {\n      id: 1,\n      initials: 'RR',\n      name: 'Recekesavan R',\n      role: 'Team Lead',\n      hours: '32h',\n      color: '#4CAF50'\n    },\n    {\n      id: 2,\n      initials: 'S',\n      name: 'Sastha',\n      role: 'Recekesavan Team',\n      hours: '16.5h',\n      color: '#FF9800'\n    },\n    {\n      id: 3,\n      initials: 'J',\n      name: 'Jakhir',\n      role: 'Team Lead',\n      hours: '16h',\n      color: '#2196F3'\n    },\n    {\n      id: 4,\n      initials: 'I',\n      name: 'Ibrahim',\n      role: 'Recekesavan Team',\n      hours: '16h',\n      color: '#9C27B0'\n    },\n    {\n      id: 5,\n      initials: 'RK',\n      name: 'Ram kumar',\n      role: 'Team Lead',\n      hours: '40h',\n      color: '#F44336'\n    }\n  ];\n\n  // Load tasks from localStorage or use default data\n  const loadTasksFromStorage = () => {\n    const savedTasks = localStorage.getItem('schedule-tasks');\n    if (savedTasks) {\n      return JSON.parse(savedTasks);\n    }\n    // Return default tasks if no saved data\n    return [\n    {\n      id: 1,\n      personId: 1,\n      weekIndex: 26,\n      dayIndex: 2, // Wednesday\n      title: 'Submittal d Auburn Vist',\n      hours: '4h',\n      color: '#F44336',\n      project: 'Artcad Builders / Auburn Vista Apartments',\n      status: 'tentative',\n      notes: 'Submittal documentation for Auburn Vista project',\n      startDate: '30 Jul 2025',\n      endDate: '30 Jul 2025',\n      duration: '1 working day'\n    },\n    {\n      id: 2,\n      personId: 1,\n      weekIndex: 26,\n      dayIndex: 2,\n      title: 'No Task Dakota Affo',\n      hours: '4h',\n      color: '#4CAF50',\n      project: 'Dakota Affo Project',\n      status: 'completed',\n      notes: 'General project work',\n      startDate: '30 Jul 2025',\n      endDate: '30 Jul 2025',\n      duration: '1 working day'\n    },\n    {\n      id: 3,\n      personId: 2,\n      weekIndex: 26,\n      dayIndex: 0,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '7.5h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '28 Jul 2025',\n      endDate: '28 Jul 2025',\n      duration: '1 working day'\n    },\n    {\n      id: 4,\n      personId: 2,\n      weekIndex: 26,\n      dayIndex: 1,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '29 Jul 2025',\n      endDate: '29 Jul 2025',\n      duration: '1 working day'\n    },\n    {\n      id: 5,\n      personId: 2,\n      weekIndex: 26,\n      dayIndex: 2,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '30 Jul 2025',\n      endDate: '30 Jul 2025',\n      duration: '1 working day'\n    },\n    {\n      id: 6,\n      personId: 3,\n      weekIndex: 26,\n      dayIndex: 3,\n      title: 'No Task Sand Canyon Plaza EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'General project work for Sand Canyon',\n      startDate: '31 Jul 2025',\n      endDate: '31 Jul 2025',\n      duration: '1 working day'\n    },\n    {\n      id: 7,\n      personId: 3,\n      weekIndex: 26,\n      dayIndex: 4,\n      title: 'No Task Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'General project work for Sand Canyon',\n      startDate: '1 Aug 2025',\n      endDate: '1 Aug 2025',\n      duration: '1 working day'\n    },\n    {\n      id: 8,\n      personId: 4,\n      weekIndex: 26,\n      dayIndex: 0,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '28 Jul 2025',\n      endDate: '28 Jul 2025',\n      duration: '1 working day'\n    },\n    {\n      id: 9,\n      personId: 4,\n      weekIndex: 26,\n      dayIndex: 1,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '29 Jul 2025',\n      endDate: '29 Jul 2025',\n      duration: '1 working day'\n    },\n    {\n      id: 10,\n      personId: 4,\n      weekIndex: 26,\n      dayIndex: 2,\n      title: 'Level 3 - Ai Sand Canyc EDC',\n      hours: '8h',\n      color: '#FFE0B2',\n      project: 'Sand Canyon Plaza EDC',\n      status: 'tentative',\n      notes: 'Level 3 design work for Sand Canyon project',\n      startDate: '30 Jul 2025',\n      endDate: '30 Jul 2025',\n      duration: '1 working day'\n    }\n  ];\n  };\n\n  const [tasks, setTasks] = useState(loadTasksFromStorage());\n\n  const getTasksForPersonAndDay = (personId, weekIndex, dayIndex) => {\n    return tasks.filter(task => \n      task.personId === personId && \n      task.weekIndex === weekIndex && \n      task.dayIndex === dayIndex\n    );\n  };\n\n  const formatDay = (date) => {\n    const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    const dayName = days[date.getDay() === 0 ? 6 : date.getDay() - 1];\n    const dayNumber = date.getDate();\n    return `${dayName} ${dayNumber}`;\n  };\n\n  const formatMonthRange = () => {\n    const currentWeek = allWeeks[currentWeekIndex];\n    const firstDay = currentWeek[0];\n    const lastDay = currentWeek[6];\n    \n    const firstMonth = firstDay.toLocaleDateString('en-US', { month: 'short' });\n    const lastMonth = lastDay.toLocaleDateString('en-US', { month: 'short' });\n    \n    if (firstMonth === lastMonth) {\n      return firstMonth;\n    }\n    return `${firstMonth} - ${lastMonth}`;\n  };\n\n  const getCurrentDay = () => {\n    const today = new Date();\n    const currentWeek = allWeeks[currentWeekIndex];\n    const todayIndex = currentWeek.findIndex(day => \n      day.toDateString() === today.toDateString()\n    );\n    \n    if (todayIndex !== -1) {\n      return formatDay(currentWeek[todayIndex]);\n    }\n    return null;\n  };\n\n  const navigateWeek = (direction) => {\n    const newIndex = currentWeekIndex + direction;\n    if (newIndex >= 0 && newIndex < allWeeks.length) {\n      setCurrentWeekIndex(newIndex);\n    }\n  };\n\n  const goToToday = () => {\n    setCurrentWeekIndex(26); // Current week index\n  };\n\n  const handleTaskClick = (task) => {\n    setSelectedTask(task);\n    setShowModal(true);\n  };\n\n  const handleEmptyCellClick = (personId, weekIndex, dayIndex, day) => {\n    const newTask = {\n      id: Date.now(), // Generate unique ID\n      personId: personId,\n      weekIndex: weekIndex,\n      dayIndex: dayIndex,\n      title: '',\n      hours: '8h',\n      color: '#FF6B6B',\n      project: '',\n      status: 'pending',\n      notes: '',\n      startDate: day,\n      endDate: day,\n      duration: 1\n    };\n    setSelectedTask(newTask);\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedTask(null);\n  };\n\n  const handleTaskUpdate = (updatedTask) => {\n    setTasks(prevTasks => {\n      let newTasks;\n      \n      // Handle delete\n      if (updatedTask._delete) {\n        newTasks = prevTasks.filter(task => task.id !== updatedTask.id);\n      }\n      // If it's a new task (no existing id), add it\n      else if (!updatedTask.id || !prevTasks.find(t => t.id === updatedTask.id)) {\n        newTasks = [...prevTasks, updatedTask];\n      }\n      // Otherwise update existing task\n      else {\n        newTasks = prevTasks.map(task => \n          task.id === updatedTask.id ? updatedTask : task\n        );\n      }\n      \n      // Save to localStorage\n      localStorage.setItem('schedule-tasks', JSON.stringify(newTasks));\n      return newTasks;\n    });\n  };\n\n  const currentWeek = allWeeks[currentWeekIndex];\n  const currentDay = getCurrentDay();\n\n  return (\n    <div className=\"schedule-container\">\n      {/* Header */}\n      <div className=\"schedule-header\">\n        <div className=\"header-left\">\n          <button className=\"add-person-btn\" onClick={() => setShowPersonModal(true)}>\n            <span className=\"person-icon\">👤</span>\n            <span className=\"plus-icon\">+</span>\n            <span className=\"btn-text\">Add person</span>\n          </button>\n        </div>\n        \n        <div className=\"header-center\">\n          <h2>{formatMonthRange()}</h2>\n          {currentDay && <span className=\"current-day\">{currentDay}</span>}\n        </div>\n        \n        <div className=\"header-right\">\n          <button className=\"nav-btn\" onClick={() => navigateWeek(-1)}>←</button>\n          <button className=\"nav-btn\" onClick={() => navigateWeek(1)}>→</button>\n          <button className=\"today-btn\" onClick={goToToday}>Today</button>\n        </div>\n      </div>\n\n      {/* Schedule Grid */}\n      <div className=\"schedule-grid\">\n        {/* Days Header */}\n        <div className=\"days-header\">\n          {currentWeek.map((day, index) => (\n            <div key={index} className=\"day-header\">\n              {formatDay(day)}\n            </div>\n          ))}\n        </div>\n\n        {/* People Rows */}\n        {teamMembers.map((person) => (\n          <div key={person.id} className=\"person-row\">\n            {/* Task Blocks */}\n            {currentWeek.map((day, dayIndex) => (\n              <div \n                key={dayIndex} \n                className=\"day-cell\"\n                onClick={() => handleEmptyCellClick(person.id, currentWeekIndex, dayIndex, day)}\n              >\n                {getTasksForPersonAndDay(person.id, currentWeekIndex, dayIndex).map((task) => (\n                  <div \n                    key={task.id} \n                    className=\"task-block\"\n                    style={{ backgroundColor: task.color }}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleTaskClick(task);\n                    }}\n                  >\n                    <div className=\"task-title\">{task.title}</div>\n                    <div className=\"task-hours\">{task.hours}</div>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      {/* Week Navigation Info */}\n      <div className=\"week-info\">\n        Week {currentWeekIndex + 1} of {allWeeks.length} \n        ({currentWeekIndex - 26 > 0 ? `+${currentWeekIndex - 26} weeks ahead` : \n          currentWeekIndex - 26 < 0 ? `${Math.abs(currentWeekIndex - 26)} weeks ago` : 'Current week'})\n      </div>\n\n\n\n      {/* Allocation Modal */}\n      {showModal && selectedTask && (\n        <AllocationModal \n          task={selectedTask}\n          person={teamMembers.find(p => p.id === selectedTask.personId)}\n          onClose={closeModal}\n          onUpdate={handleTaskUpdate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Schedule; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,WAAW,CAAC;EAC7D,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAG7D;EACA,MAAMe,aAAa,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;IAC7C,MAAMC,KAAK,GAAG,EAAE;IAChB,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACJ,SAAS,CAAC;IAEvC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,EAAEI,CAAC,EAAE,EAAE;MACjC,MAAMC,IAAI,GAAG,EAAE;MACf,MAAMC,SAAS,GAAG,IAAIH,IAAI,CAACD,WAAW,CAAC;MACvCI,SAAS,CAACC,OAAO,CAACL,WAAW,CAACM,OAAO,CAAC,CAAC,IAAIN,WAAW,CAACO,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEvE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,MAAMC,GAAG,GAAG,IAAIR,IAAI,CAACG,SAAS,CAAC;QAC/BK,GAAG,CAACJ,OAAO,CAACD,SAAS,CAACE,OAAO,CAAC,CAAC,GAAGE,CAAC,CAAC;QACpCL,IAAI,CAACO,IAAI,CAACD,GAAG,CAAC;MAChB;MACAV,KAAK,CAACW,IAAI,CAACP,IAAI,CAAC;MAChBH,WAAW,CAACK,OAAO,CAACL,WAAW,CAACM,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAChD;IAEA,OAAOP,KAAK;EACd,CAAC;;EAED;EACA,MAAMF,SAAS,GAAG,IAAII,IAAI,CAAC,CAAC;EAC5BJ,SAAS,CAACQ,OAAO,CAACR,SAAS,CAACS,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACjD,MAAMK,QAAQ,GAAGf,aAAa,CAACC,SAAS,EAAE,EAAE,CAAC;EAC7C,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9D;EACA,MAAMiC,WAAW,GAAG,CAClB;IACEC,EAAE,EAAE,CAAC;IACLC,QAAQ,EAAE,IAAI;IACdC,IAAI,EAAE,eAAe;IACrBC,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,QAAQ,EAAE,GAAG;IACbC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,kBAAkB;IACxBC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE;EACT,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,QAAQ,EAAE,GAAG;IACbC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,QAAQ,EAAE,GAAG;IACbC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,kBAAkB;IACxBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,QAAQ,EAAE,IAAI;IACdC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,CACF;;EAED;EACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACzD,IAAIF,UAAU,EAAE;MACd,OAAOG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC;IAC/B;IACA;IACA,OAAO,CACP;MACEP,EAAE,EAAE,CAAC;MACLY,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MAAE;MACbC,KAAK,EAAE,yBAAyB;MAChCX,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,2CAA2C;MACpDC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,kDAAkD;MACzDpC,SAAS,EAAE,aAAa;MACxBqC,OAAO,EAAE,aAAa;MACtBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEpB,EAAE,EAAE,CAAC;MACLY,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,qBAAqB;MAC5BX,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,qBAAqB;MAC9BC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,sBAAsB;MAC7BpC,SAAS,EAAE,aAAa;MACxBqC,OAAO,EAAE,aAAa;MACtBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEpB,EAAE,EAAE,CAAC;MACLY,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,6BAA6B;MACpCX,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,uBAAuB;MAChCC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,6CAA6C;MACpDpC,SAAS,EAAE,aAAa;MACxBqC,OAAO,EAAE,aAAa;MACtBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEpB,EAAE,EAAE,CAAC;MACLY,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,6BAA6B;MACpCX,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,uBAAuB;MAChCC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,6CAA6C;MACpDpC,SAAS,EAAE,aAAa;MACxBqC,OAAO,EAAE,aAAa;MACtBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEpB,EAAE,EAAE,CAAC;MACLY,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,6BAA6B;MACpCX,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,uBAAuB;MAChCC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,6CAA6C;MACpDpC,SAAS,EAAE,aAAa;MACxBqC,OAAO,EAAE,aAAa;MACtBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEpB,EAAE,EAAE,CAAC;MACLY,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,+BAA+B;MACtCX,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,uBAAuB;MAChCC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,sCAAsC;MAC7CpC,SAAS,EAAE,aAAa;MACxBqC,OAAO,EAAE,aAAa;MACtBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEpB,EAAE,EAAE,CAAC;MACLY,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,wBAAwB;MAC/BX,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,uBAAuB;MAChCC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,sCAAsC;MAC7CpC,SAAS,EAAE,YAAY;MACvBqC,OAAO,EAAE,YAAY;MACrBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEpB,EAAE,EAAE,CAAC;MACLY,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,6BAA6B;MACpCX,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,uBAAuB;MAChCC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,6CAA6C;MACpDpC,SAAS,EAAE,aAAa;MACxBqC,OAAO,EAAE,aAAa;MACtBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEpB,EAAE,EAAE,CAAC;MACLY,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,6BAA6B;MACpCX,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,uBAAuB;MAChCC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,6CAA6C;MACpDpC,SAAS,EAAE,aAAa;MACxBqC,OAAO,EAAE,aAAa;MACtBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEpB,EAAE,EAAE,EAAE;MACNY,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,6BAA6B;MACpCX,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,uBAAuB;MAChCC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,6CAA6C;MACpDpC,SAAS,EAAE,aAAa;MACxBqC,OAAO,EAAE,aAAa;MACtBC,QAAQ,EAAE;IACZ,CAAC,CACF;EACD,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGxD,QAAQ,CAACwC,oBAAoB,CAAC,CAAC,CAAC;EAE1D,MAAMiB,uBAAuB,GAAGA,CAACX,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,KAAK;IACjE,OAAOO,KAAK,CAACG,MAAM,CAACC,IAAI,IACtBA,IAAI,CAACb,QAAQ,KAAKA,QAAQ,IAC1Ba,IAAI,CAACZ,SAAS,KAAKA,SAAS,IAC5BY,IAAI,CAACX,QAAQ,KAAKA,QACpB,CAAC;EACH,CAAC;EAED,MAAMY,SAAS,GAAIC,IAAI,IAAK;IAC1B,MAAMC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAC9D,MAAMC,OAAO,GAAGD,IAAI,CAACD,IAAI,CAACnC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGmC,IAAI,CAACnC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACjE,MAAMsC,SAAS,GAAGH,IAAI,CAACpC,OAAO,CAAC,CAAC;IAChC,OAAO,GAAGsC,OAAO,IAAIC,SAAS,EAAE;EAClC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,WAAW,GAAGpC,QAAQ,CAACC,gBAAgB,CAAC;IAC9C,MAAMoC,QAAQ,GAAGD,WAAW,CAAC,CAAC,CAAC;IAC/B,MAAME,OAAO,GAAGF,WAAW,CAAC,CAAC,CAAC;IAE9B,MAAMG,UAAU,GAAGF,QAAQ,CAACG,kBAAkB,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAC;IAC3E,MAAMC,SAAS,GAAGJ,OAAO,CAACE,kBAAkB,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAC;IAEzE,IAAIF,UAAU,KAAKG,SAAS,EAAE;MAC5B,OAAOH,UAAU;IACnB;IACA,OAAO,GAAGA,UAAU,MAAMG,SAAS,EAAE;EACvC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAG,IAAItD,IAAI,CAAC,CAAC;IACxB,MAAM8C,WAAW,GAAGpC,QAAQ,CAACC,gBAAgB,CAAC;IAC9C,MAAM4C,UAAU,GAAGT,WAAW,CAACU,SAAS,CAAChD,GAAG,IAC1CA,GAAG,CAACiD,YAAY,CAAC,CAAC,KAAKH,KAAK,CAACG,YAAY,CAAC,CAC5C,CAAC;IAED,IAAIF,UAAU,KAAK,CAAC,CAAC,EAAE;MACrB,OAAOf,SAAS,CAACM,WAAW,CAACS,UAAU,CAAC,CAAC;IAC3C;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMG,YAAY,GAAIC,SAAS,IAAK;IAClC,MAAMC,QAAQ,GAAGjD,gBAAgB,GAAGgD,SAAS;IAC7C,IAAIC,QAAQ,IAAI,CAAC,IAAIA,QAAQ,GAAGlD,QAAQ,CAACmD,MAAM,EAAE;MAC/CjD,mBAAmB,CAACgD,QAAQ,CAAC;IAC/B;EACF,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBlD,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMmD,eAAe,GAAIxB,IAAI,IAAK;IAChCjD,eAAe,CAACiD,IAAI,CAAC;IACrB/C,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMwE,oBAAoB,GAAGA,CAACtC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEpB,GAAG,KAAK;IACnE,MAAMyD,OAAO,GAAG;MACdnD,EAAE,EAAEd,IAAI,CAACkE,GAAG,CAAC,CAAC;MAAE;MAChBxC,QAAQ,EAAEA,QAAQ;MAClBC,SAAS,EAAEA,SAAS;MACpBC,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAE,EAAE;MACTX,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,SAAS;MAChBW,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,EAAE;MACTpC,SAAS,EAAEY,GAAG;MACdyB,OAAO,EAAEzB,GAAG;MACZ0B,QAAQ,EAAE;IACZ,CAAC;IACD5C,eAAe,CAAC2E,OAAO,CAAC;IACxBzE,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM2E,UAAU,GAAGA,CAAA,KAAM;IACvB3E,YAAY,CAAC,KAAK,CAAC;IACnBF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAM8E,gBAAgB,GAAIC,WAAW,IAAK;IACxCjC,QAAQ,CAACkC,SAAS,IAAI;MACpB,IAAIC,QAAQ;;MAEZ;MACA,IAAIF,WAAW,CAACG,OAAO,EAAE;QACvBD,QAAQ,GAAGD,SAAS,CAAChC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACzB,EAAE,KAAKuD,WAAW,CAACvD,EAAE,CAAC;MACjE;MACA;MAAA,KACK,IAAI,CAACuD,WAAW,CAACvD,EAAE,IAAI,CAACwD,SAAS,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC5D,EAAE,KAAKuD,WAAW,CAACvD,EAAE,CAAC,EAAE;QACzEyD,QAAQ,GAAG,CAAC,GAAGD,SAAS,EAAED,WAAW,CAAC;MACxC;MACA;MAAA,KACK;QACHE,QAAQ,GAAGD,SAAS,CAACK,GAAG,CAACpC,IAAI,IAC3BA,IAAI,CAACzB,EAAE,KAAKuD,WAAW,CAACvD,EAAE,GAAGuD,WAAW,GAAG9B,IAC7C,CAAC;MACH;;MAEA;MACAjB,YAAY,CAACsD,OAAO,CAAC,gBAAgB,EAAEpD,IAAI,CAACqD,SAAS,CAACN,QAAQ,CAAC,CAAC;MAChE,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMzB,WAAW,GAAGpC,QAAQ,CAACC,gBAAgB,CAAC;EAC9C,MAAMmE,UAAU,GAAGzB,aAAa,CAAC,CAAC;EAElC,oBACErE,OAAA;IAAK+F,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAEjChG,OAAA;MAAK+F,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BhG,OAAA;QAAK+F,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BhG,OAAA;UAAQ+F,SAAS,EAAC,gBAAgB;UAACE,OAAO,EAAEA,CAAA,KAAMvF,kBAAkB,CAAC,IAAI,CAAE;UAAAsF,QAAA,gBACzEhG,OAAA;YAAM+F,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACvCrG,OAAA;YAAM+F,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpCrG,OAAA;YAAM+F,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENrG,OAAA;QAAK+F,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BhG,OAAA;UAAAgG,QAAA,EAAKnC,gBAAgB,CAAC;QAAC;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC5BP,UAAU,iBAAI9F,OAAA;UAAM+F,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAEF;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eAENrG,OAAA;QAAK+F,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BhG,OAAA;UAAQ+F,SAAS,EAAC,SAAS;UAACE,OAAO,EAAEA,CAAA,KAAMvB,YAAY,CAAC,CAAC,CAAC,CAAE;UAAAsB,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvErG,OAAA;UAAQ+F,SAAS,EAAC,SAAS;UAACE,OAAO,EAAEA,CAAA,KAAMvB,YAAY,CAAC,CAAC,CAAE;UAAAsB,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtErG,OAAA;UAAQ+F,SAAS,EAAC,WAAW;UAACE,OAAO,EAAEnB,SAAU;UAAAkB,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNrG,OAAA;MAAK+F,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAE5BhG,OAAA;QAAK+F,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzBlC,WAAW,CAAC6B,GAAG,CAAC,CAACnE,GAAG,EAAE8E,KAAK,kBAC1BtG,OAAA;UAAiB+F,SAAS,EAAC,YAAY;UAAAC,QAAA,EACpCxC,SAAS,CAAChC,GAAG;QAAC,GADP8E,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAGLxE,WAAW,CAAC8D,GAAG,CAAEY,MAAM,iBACtBvG,OAAA;QAAqB+F,SAAS,EAAC,YAAY;QAAAC,QAAA,EAExClC,WAAW,CAAC6B,GAAG,CAAC,CAACnE,GAAG,EAAEoB,QAAQ,kBAC7B5C,OAAA;UAEE+F,SAAS,EAAC,UAAU;UACpBE,OAAO,EAAEA,CAAA,KAAMjB,oBAAoB,CAACuB,MAAM,CAACzE,EAAE,EAAEH,gBAAgB,EAAEiB,QAAQ,EAAEpB,GAAG,CAAE;UAAAwE,QAAA,EAE/E3C,uBAAuB,CAACkD,MAAM,CAACzE,EAAE,EAAEH,gBAAgB,EAAEiB,QAAQ,CAAC,CAAC+C,GAAG,CAAEpC,IAAI,iBACvEvD,OAAA;YAEE+F,SAAS,EAAC,YAAY;YACtBS,KAAK,EAAE;cAAEC,eAAe,EAAElD,IAAI,CAACpB;YAAM,CAAE;YACvC8D,OAAO,EAAGS,CAAC,IAAK;cACdA,CAAC,CAACC,eAAe,CAAC,CAAC;cACnB5B,eAAe,CAACxB,IAAI,CAAC;YACvB,CAAE;YAAAyC,QAAA,gBAEFhG,OAAA;cAAK+F,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEzC,IAAI,CAACV;YAAK;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9CrG,OAAA;cAAK+F,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEzC,IAAI,CAACrB;YAAK;cAAAgE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GATzC9C,IAAI,CAACzB,EAAE;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUT,CACN;QAAC,GAjBGzD,QAAQ;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBV,CACN;MAAC,GAvBME,MAAM,CAACzE,EAAE;QAAAoE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBd,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNrG,OAAA;MAAK+F,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,OACpB,EAACrE,gBAAgB,GAAG,CAAC,EAAC,MAAI,EAACD,QAAQ,CAACmD,MAAM,EAAC,GAC/C,EAAClD,gBAAgB,GAAG,EAAE,GAAG,CAAC,GAAG,IAAIA,gBAAgB,GAAG,EAAE,cAAc,GACnEA,gBAAgB,GAAG,EAAE,GAAG,CAAC,GAAG,GAAGiF,IAAI,CAACC,GAAG,CAAClF,gBAAgB,GAAG,EAAE,CAAC,YAAY,GAAG,cAAc,EAAC,GAChG;IAAA;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAKL9F,SAAS,IAAIF,YAAY,iBACxBL,OAAA,CAACH,eAAe;MACd0D,IAAI,EAAElD,YAAa;MACnBkG,MAAM,EAAE1E,WAAW,CAAC4D,IAAI,CAACqB,CAAC,IAAIA,CAAC,CAAChF,EAAE,KAAKzB,YAAY,CAACqC,QAAQ,CAAE;MAC9DqE,OAAO,EAAE5B,UAAW;MACpB6B,QAAQ,EAAE5B;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnG,EAAA,CAtbID,QAAQ;AAAAgH,EAAA,GAARhH,QAAQ;AAwbd,eAAeA,QAAQ;AAAC,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}